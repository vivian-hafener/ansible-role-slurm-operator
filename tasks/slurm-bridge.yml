---
# TASK REF: https://github.com/SlinkyProject/slurm-bridge?tab=readme-ov-file#installation

- name: Check for slurm-bridge-jwt-token
  tags: configure
  kubernetes.core.k8s_info:
    api_version: "{{ api_version }}"
    kind: Secret
    name: "slurm-bridge-jwt-token"
    namespace: "{{ slinky_namespace }}"
  register: slurm_bridge_jwt_token_state

- name: Create SLURM_JWT for slurm-bridge
  tags: configure
  become: true
  ansible.builtin.command:
    cmd: scontrol token username=slurm lifespan=infinite
  when: inventory_hostname == slurmctld_host and slurm_bridge_chart_state == "present" and slurm_bridge_jwt_token_state.resources == []
  register: slurm_jwt
  changed_when: true

- name: Create namespace for slurm-bridge
  tags: configure
  when: slurm_bridge_chart_state == "present"
  kubernetes.core.k8s:
    name: "{{ slinky_namespace }}"
    api_version: "{{ api_version }}"
    kind: Namespace
    state: "{{ slurm_bridge_chart_state }}"

- name: Create secret for slurm-bridge jwt token
  tags: configure
  when: slurm_bridge_chart_state == "present" and slurm_bridge_jwt_token_state.resources == []
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: "{{ api_version }}"
      kind: Secret
      metadata:
        name: slurm-bridge-jwt-token
        namespace: "{{ slinky_namespace }}"
      type: Opaque
      data:
        auth-token: "{{ slurm_jwt.stdout.split('=') | last | b64encode }}"

# TODO slurmrestd needs to be up
- name: Apply Slurm Bridge Helm Chart
  tags: configure
  kubernetes.core.helm:
    name: "{{ slurm_bridge_chart_name }}"
    chart_ref: "{{ slurm_bridge_chart_ref }}"
    namespace: "{{ slinky_namespace }}"
    create_namespace: true
    state: "{{ slurm_bridge_chart_state }}"
    values_files: "{{ slinky_values_dir }}/{{ slurm_bridge_chart_values }}"
  retries: 2
  delay: 5
  register: slurm_bridge_state

- name: Fix node taints
  tags: configure
  kubernetes.core.k8s_taint:
    state: absent
    name: "{{ item }}"
    taints:
      - effect: NoExecute
        key: "slinky.slurm.net/managed-node"
        value: "managed-node=slurm-bridge-scheduler"
  when: slurm_bridge_chart_state != "present" and slurm_bridge_state.changed
  loop: "{{ groups['kubernetes'] }}"
